package com.korosoft.invoice.service.impl;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.alibaba.fastjson.JSONObject;
import com.korosoft.invoice.controller.ElectronicInvoiceController;
import com.korosoft.invoice.dto.InvoiceInfoDto;
import com.korosoft.invoice.service.ElectronicInvoiceService;
import com.korosoft.invoice.service.SysConfigService;
import com.korosoft.invoice.util.AesUtil;
import com.korosoft.invoice.util.HttpUtils;
import com.korosoft.invoice.vo.ResponseData;
import com.korosoft.invoice.vo.ResultData;

/**
 * 电子票业务逻辑层
 * 
 * @author 59532
 *
 */
@Service
public class ElectronicInvoiceServiceImpl extends AbstractInvoiceService implements ElectronicInvoiceService {

	private static final Logger LOG = LoggerFactory.getLogger(ElectronicInvoiceController.class);
	
	@Autowired
	public ElectronicInvoiceServiceImpl(SysConfigService sysConfigService) {
		super.sysConfigService = sysConfigService;
	}

	@Override
	public ResponseData open(int groupCode, int billFlag, InvoiceInfoDto data) {
		InvoiceInfoDto dto = generateInvoiceInfoDto(groupCode, data);
		String params = JSONObject.toJSONString(dto);
		Map<String, String> headers = new HashMap<>();
		headers.put("busSysId", dto.getBusSysId());
		headers.put("SID", "1009");
		headers.put("Content-Type", "application/json");
		try {
			params = AesUtil.encrypt(params);
			String result = HttpUtils.doPost(etcloudApiUrl, params, headers);
			ResultData resultData = JSONObject.parseObject(result, ResultData.class);
			if (Objects.equals("false", resultData.getSuccess())) {
				LOG.info("电子票开票失败：{}", resultData.getMessage());
				return ResponseData.faill("电子票开票失败:" + resultData.getMessage());
			} else {
				String value = resultData.getValue();
				value = AesUtil.decrypt(value);
				LOG.info("电子票开票成功, 发票号码：{}", data.getBillBatchNo());
				return ResponseData.success(value, "电子票开票成功");
			}
		} catch (Exception ex) {
			LOG.error("接口服务平台电子票执行失败：{}", ex.getMessage());
			return ResponseData.faill("接口服务平台电子票执行失败:" + ex.getMessage());
		}
	}
}